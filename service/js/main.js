/**
 * jQuery VoiceBase Plugin v3
 */
var voiceBase = (function($) {
    "use strict";

    var VB = {
        instances: [],
        init: function(playerId) {
            var c = VB.instances.length;
            VB.instances.push(new VB.create_instance(c, playerId));
            c++;
            this.current_instance = c - 1;
        },
        create_instance: function(c, playerId) {
            this.instance_index = c;
            this.player = new VB.Player(this, playerId);
        }
    };

    /*** Start Voicebase Plugin Settings ***/
    VB.default_settings = {
        apiUrl: 'https://api.voicebase.com/services',
        apiKey: null,
        externalId: null,
        apiVersion: "1.1",
        mediaId: null,
        password: null,
        token: null,
        tokenTimeOut: 10,
        example: !1,
        exampleTokenUrl: 'http://demo.voicsebasejwplayer.dev4.sibers.com/extoken.php',
        helpUrl: 'http://www.voicebase.com/developers/',
        stream: false,
        mediaTypeOverride: null, // audio || video
        vbsButtons: {
            share: !0,
            comment: !0,
            downloadMedia: !0,
            downloadTranscript: !0,
            remove: !0,
            favorite: !0,
            help: !0,
            evernote: !0,
            edit: !1,
            print: !0,
            orderTranscript: !0,
            prev: !0,
            next: !0,
            fullscreen: !0,
            readermode: !0,
            pwrdb: !0,
            unquotes: !0
        },
        webHooks: {},
        addThisButtons: ['gmail', 'facebook', 'twitter', 'google_plusone_share', 'compact'],
        mediumResponsiveWithSpeakers: 600,
        mediumResponsive: 450,
        minResponsive: 400,
        voicebaseShare: !1,
        shareTitle: "Checkout this!",
        showMore: !1,
        shareParams: {},
        shareUrl: !1,
        trackEvents: !1,
        mediaBlock: 'vbs-media',
        mediaWidth: !1,
        controlsBlock: 'vbs-controls',
        controlsWidth: !1,
        searchBarOuter: !0,
        searchBarBlock: 'vbs-searchbar-block',
        searchBarBlockWidth: !1,
        tabView: !1,
        tabViewForMobile: !0,
        keywordsBlock: 'vbs-keywords',
        keywordsHeight: 170,
        keywordsWidth: !1,
        keywordsResizable: !1,
        keywordsGroups: !0,
        keywordsCounter: !0,
        showAutoGeneratedKeywords: !0,
        editKeywords: !1,
        transcriptBlock: 'vbs-transcript',
        transcriptHeight: 148,
        transcriptWidth: !1,
        transcriptResizable: !1,
        transcriptHighlight: 10,
        transcriptCheckTimer: 10,
        turnTimes: !0,
        lineBreak: !1,
        commentsBlock: 'vbs-comments',
        humanOnly: !1,
        animation: !0,
        localApp: !1,
        localSearch: !1,
        localSearchHelperUrl: 'js/workers/',
        colors: ['#78c361', '#9932cc', '#ff69b4', '#6495ed', '#ffd700', '#f6a7a1', '#7fb397', '#009999'],
        filterSpeaker: 'all',
        playerType: 'youtube',
        playerId: 'ytplayer',
        keywordsColumns: !1,
        topicHover: !0,
        zeroclipboard: 'ZeroClipboard.swf',
        commentsUsername: !1,
        commentsUserhandle: !1,
        contextMenu: !0,
        debug: !0,
        toggleBlocks: !0,
        toggleMediaBlock: !0,
        toggleKeywordsBlock: !0,
        toggleTranscriptBlock: !0,
        toggleCommentBlock: !0,
        hasMediaBlockHeader: !0,
        hasKeywordsBlockHeader: !0,
        hasTranscriptBlockHeader: !0,
        hasCommentsBlockHeader: !0,
        showControlsBlock: !0,
        showKeywordsBlock: !0,
        showTranscriptBlock: !0,
        showCommentsBlock: !0,
        expandMediaBlock: !0,
        expandKeywordsBlock: !0,
        expandTranscriptBlock: !0,
        expandCommentsBlock: !1,
        expandNewsBlock: !1,
        newsUrl: 'https://stage.voicebase.com/bing/search?query=',
        newsBlock: 'vbs-news',
        newsWidth: !1,
        showNewsBlock: !1,
        toggleNewsBlock: !0,
        hasNewsBlockHeader: !0,
        markersInNativeTimeline: !1,
        cssPathForPlayerFrame: 'css/vbs-kaltura-iframe.css',
        modalErrors: !1,
        modalSave: !1,
        nativePlaylist: !0,
        restrictions: [],
        ready: function () {}
    };
    VB.settings = {};
    /*** End Voicebase Plugin Settings ***/

    VB.reSettings = function(cs) {
        VB.settings = jQuery.extend(true, {}, VB.default_settings);
        VB.data = jQuery.extend(true, {}, VB.default_data);
        var s = VB.common.keysToLowerCase(cs);

        // Main
        setProperty(s, 'apiUrl');
        setProperty(s, 'apiKey');
        setProperty(s, 'externalId');
        setProperty(s, 'apiVersion');
        setProperty(s, 'mediaId');
        setProperty(s, 'password');
        setProperty(s, 'token');
        setProperty(s, 'tokenTimeOut');
        setProperty(s, 'example');
        setProperty(s, 'exampleTokenUrl');
        setProperty(s, 'stream');
        setProperty(s, 'debug');
        setProperty(s, 'toggleBlocks');
        setProperty(s, 'showControlsBlock');
        setProperty(s, 'showKeywordsBlock');
        setProperty(s, 'showTranscriptBlock');
        setProperty(s, 'showCommentsBlock');
        setProperty(s, 'showNewsBlock');
        setProperty(s, 'newsUrl');
        setProperty(s, 'modalErrors');
        setProperty(s, 'mediaTypeOverride');

        if(!VB.settings.toggleBlocks){
            VB.settings.toggleMediaBlock = false;
            VB.settings.toggleKeywordsBlock = false;
            VB.settings.toggleTranscriptBlock = false;
            VB.settings.toggleCommentBlock = false;
            VB.settings.toggleNewsBlock = false;

            VB.settings.expandMediaBlock = true;
            VB.settings.expandKeywordsBlock = true;
            VB.settings.expandTranscriptBlock = true;
            VB.settings.expandCommentsBlock = true;
            VB.settings.expandNewsBlock = true;
        }
        else{
            setProperty(s, 'toggleMediaBlock');
            setProperty(s, 'toggleKeywordsBlock');
            setProperty(s, 'toggleTranscriptBlock');
            setProperty(s, 'toggleCommentBlock');
            setProperty(s, 'toggleNewsBlock');

            setProperty(s, 'expandMediaBlock');
            setProperty(s, 'expandKeywordsBlock');
            setProperty(s, 'expandTranscriptBlock');
            setProperty(s, 'expandCommentsBlock');
            setProperty(s, 'expandNewsBlock');
        }

        if(!VB.settings.toggleMediaBlock) {
            VB.settings.expandMediaBlock = true;
        }
        if(!VB.settings.toggleKeywordsBlock) {
            VB.settings.expandKeywordsBlock = true;
        }
        if(!VB.settings.toggleTranscriptBlock) {
            VB.settings.expandTranscriptBlock = true;
        }
        if(!VB.settings.toggleCommentBlock) {
            VB.settings.expandCommentsBlock = true;
        }
        if(!VB.settings.toggleNewsBlock) {
            VB.settings.expandNewsBlock = true;
        }

        setProperty(s, 'hasMediaBlockHeader');
        if(!VB.settings.hasMediaBlockHeader){
            VB.settings.toggleMediaBlock = false;
        }

        setProperty(s, 'hasKeywordsBlockHeader');
        if(!VB.settings.hasKeywordsBlockHeader){
            VB.settings.toggleKeywordsBlock = false;
        }

        setProperty(s, 'hasTranscriptBlockHeader');
        if(!VB.settings.hasTranscriptBlockHeader){
            VB.settings.toggleTranscriptBlock = false;
        }

        setProperty(s, 'hasCommentsBlockHeader');
        if(!VB.settings.hasCommentsBlockHeader){
            VB.settings.toggleCommentBlock = false;
        }

        setProperty(s, 'hasNewsBlockHeader');
        if(!VB.settings.hasNewsBlockHeader){
            VB.settings.toggleNewsBlock = false;
        }

        if (typeof s.actionflag !== 'undefined') {
            for (var i in s.actionflag) {
                VB.settings.vbsButtons[i] = s.actionflag[i];
            }
        }
        setProperty(s, 'webHooks');
        setProperty(s, 'helpUrl');
        if(!VB.settings.helpUrl && !VB.settings.webHooks.help) {
            VB.settings.vbsButtons.help = false;
        }

        setProperty(s, 'mediumResponsiveWithSpeakers');
        setProperty(s, 'mediumResponsive');
        setProperty(s, 'minResponsive');
        setProperty(s, 'showMore');
        setProperty(s, 'animation');
        setProperty(s, 'playerType');
        setProperty(s, 'playerId');
        setProperty(s, 'contextMenu');
        setProperty(s, 'trackEvents');

        // Share
        setProperty(s, 'shareParams');
        setProperty(s, 'shareUrl');
        setProperty(s, 'shareTitle');
        setProperty(s, 'addThisButtons');
        setProperty(s, 'voicebaseShare');
        setProperty(s, 'zeroclipboard');

        // Media
        setProperty(s, 'mediaBlock');
        setBlockWidth(s, 'mediaWidth');
        setProperty(s, 'controlsBlock');
        setBlockWidth(s, 'controlsWidth');

        setProperty(s, 'tabView');
        setProperty(s, 'tabViewForMobile');
        if(VB.helper.isMobile() && VB.settings.tabViewForMobile) {
            VB.settings.tabView = true;
        }
        if(!VB.settings.tabView){
            // Keywords
            setProperty(s, 'searchBarOuter');
            setProperty(s, 'keywordsBlock');
            setProperty(s, 'keywordsHeight');
            setBlockWidth(s, 'keywordsWidth');
        }
        else{
            VB.settings.searchBarOuter = true;
            $('#' + s.keywordsblock).empty();
        }
        if(VB.settings.searchBarOuter) {
            setProperty(s, 'searchBarBlock');
            setBlockWidth(s, 'searchBarBlockWidth');
        }

        setProperty(s, 'keywordsColumns');
        setProperty(s, 'keywordsResizable');
        setProperty(s, 'editKeywords');
        setProperty(s, 'localApp');
        setProperty(s, 'localSearch');
        if(VB.settings.localApp && typeof Fuse != 'undefined'){
            VB.settings.localSearch = true;
            VB.settings.showCommentsBlock = false;
            VB.settings.vbsButtons.edit = false;
            VB.settings.vbsButtons.downloadMedia = false;
            VB.settings.vbsButtons.downloadTranscript = false;
            VB.settings.vbsButtons.favorite = false;
            VB.settings.vbsButtons.remove = false;
            VB.settings.vbsButtons.share = false;
            VB.settings.vbsButtons.orderTranscript = false;
        }
        if(typeof Fuse == 'undefined'){
            VB.settings.localSearch = false;
        }
        setProperty(s, 'localSearchHelperUrl');
        if(VB.settings.localSearch && typeof localSearchHelper === 'undefined') {
            jQuery.ajax({
                url: VB.settings.localSearchHelperUrl + 'localSearchHelper.js',
                dataType: 'script',
                async: true
            });
        }

        setProperty(s, 'topicHover');
        setProperty(s, 'keywordsGroups');
        setProperty(s, 'showAutoGeneratedKeywords');
        setProperty(s, 'keywordsCounter');

        // Transcript
        if(!VB.settings.tabView){
            setProperty(s, 'transcriptBlock');
            setProperty(s, 'transcriptHeight');
            setBlockWidth(s, 'transcriptWidth');
        }
        else {
            $('#' + s.transcriptblock).empty();
        }
        setProperty(s, 'transcriptResizable');
        setProperty(s, 'transcriptHighlight');
        setProperty(s, 'turnTimes');
        setProperty(s, 'lineBreak');
        setProperty(s, 'humanOnly');

        // Comments
        if(!VB.settings.tabView){
            setProperty(s, 'commentsBlock');
            setBlockWidth(s, 'commentsWidth');
        }
        else {
            $('#' + s.commentsblock).empty();
        }

        setProperty(s, 'commentsUsername');
        setProperty(s, 'commentsUserhandle');

        if(VB.settings.playerType == 'jwplayer'){
            var playlist = jwplayer(VB.settings.playerId).config.playlist;
            VB.settings.hasPlaylist = !!(playlist && playlist.length > 1 && !VB.settings.mediaId);
        }

        if(!VB.settings.tabView){
            setProperty(s, 'newsBlock');
            setBlockWidth(s, 'newsWidth');
        }
        else {
            $('#' + s.newsblock).empty();
        }

        setProperty(s, 'markersInNativeTimeline');
        if(VB.settings.markersInNativeTimeline) {
            VB.settings.showControlsBlock = false;
        }
        setProperty(s, 'cssPathForPlayerFrame');
        setProperty(s, 'modalSave');
        setProperty(s, 'nativePlaylist');

        // Restrictions of token
        setProperty(s, 'restrictions');
        if(VB.settings.restrictions.length > 0) {
            VB.settings.vbsButtons.edit = VB.settings.restrictions.indexOf('updateTranscript') > -1;
            VB.settings.editKeywords = VB.settings.restrictions.indexOf('manageKeywords') > -1;
            VB.settings.vbsButtons.remove = VB.settings.restrictions.indexOf('deleteFile') > -1;
            VB.settings.vbsButtons.share = VB.settings.restrictions.indexOf('manageShares') > -1;
        }
        setProperty(s, 'ready');
    };

    var setProperty = function(lowerProps, propertyName){
        var lowerPropertyName = propertyName.toLowerCase();
        VB.settings[propertyName] = (typeof lowerProps[lowerPropertyName]!== 'undefined') ? lowerProps[lowerPropertyName] : VB.settings[propertyName];
    };

    var setBlockWidth = function(keys_lower, prop){
        var low_prop = prop.toLowerCase();
        if(VB.helper.isMobile()) {
//            keys_lower[low_prop] = VB.helper.getMobileWidth();
        }
        VB.settings[prop] = typeof keys_lower[low_prop] !== 'undefined' ? (keys_lower[low_prop] < 220 ? 220 : keys_lower[low_prop]) : VB.settings[prop];
    };

    VB.default_data = {
        customMarkers: {},
        speakers: {},
        allSpeakers: [],
        vbsSpeakers: {},
        keywords: {},
        duration: null,
        vclass: null,
        sclass: null,
        position: 0,
        commentsThreads: null,
        startParams: [],
        played: 0,
        playerDom: null,
        playerHeight: null,
        movelistner: !1,
        dragging: !1,
        draggingVol: !1,
        kf: false,
        tf: false,
        lspeaker: null,
        clicker: false,
        waiterSave: false,
        metadataWaiter: false,
        isSaving: false,
        searcht: null,
        searchHits: null,
        localData: {},
        isMobile: false,
        keywordClickEvent: null,
        playlist_meta: null,
        highlightSnippets: null
    };
    VB.data = {};


    $.fn.voicebase = function(method) {

        if (VB.methods[method]) {
            return VB.methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || !method) {
            return VB.methods.init.apply(this, arguments);
        } else {
            $.error('Method ' + method + ' does not exist on jQuery.vbplugin');
        }

    };

    return VB;
})(jQuery);